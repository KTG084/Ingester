// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(cuid()) @map("_id")
  email              String     @unique
  password           String?
  emailVerified      DateTime?
  image              String?
  name               String?
  razorpayCustomerId String?
  purchases          Purchase[]
  accounts           Account[]
  Plan               Plan[]
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid()) @map("_id")
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Plan {
  id          String      @id @map("_id") @db.ObjectId
  userId      String
  workoutPlan WorkOutPlan
  purchases   Purchase[]
  user        User        @relation(fields: [userId], references: [id])

  @@unique([userId, id])
  @@map("plans")
}

type WorkOutPlan {
  schedule  String[]
  exercises Exercises[]
}

type Exercises {
  day      String
  routines Routine[]
}

type Routine {
  name        String
  sets        Int?
  reps        Int?
  duration    String?
  description String?
  exercises   String[]
}

model Purchase {
  id                 String @id @default(cuid()) @map("_id")
  userId             String
  planId             String @db.ObjectId
  amount             Float
  purchaseDate       Int
  razorpayPurchaseId String @unique

  user User @relation(fields: [userId], references: [id])
  plan Plan @relation(fields: [planId], references: [id])

  @@unique([userId, planId])
}
